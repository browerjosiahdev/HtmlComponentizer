{"version":3,"sources":["webpack:///html-componentizer.js","webpack:///webpack/bootstrap 515384df5efc1fe46c39","webpack:///./src/index.js","webpack:///./src/components/HtmlComponentizer.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_componentsHtmlComponentizer","_componentsHtmlComponentizer2","window","HtmlComponentizer","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_React$Component","this","handleRenderChild","renderChild","bind","state","htmlChildren","TagName","tag","process","content","prevProps","prevState","MatchComponent","component","match","RegExp","contentList","split","matches","currentContent","join","textContent","splice","indexOf","push","dangerouslySetInnerHTML","__html","matchIndex","spread","_this","test","fillerContent","getTagName","tagName","shift","removeClosing","addFillerContent","isCurrentText","slice","isValidTag","ignoredTags","find","tagContent","tagCount","isTagOpen","isSubtagClosing","subtagName","generateMatches","setState","child","index","Tag","childProps","assign","React","createElement","map","Component"],"mappings":"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","file":"html-componentizer.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _componentsHtmlComponentizer = __webpack_require__(1);\n\t\n\tvar _componentsHtmlComponentizer2 = _interopRequireDefault(_componentsHtmlComponentizer);\n\t\n\t// Attach the components to the window.\n\twindow.HtmlComponentizer = _componentsHtmlComponentizer2['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// TODO: Fix issue where this doesn't work when HTML tags have attributes.\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar HtmlComponentizer = (function (_React$Component) {\n\t    _inherits(HtmlComponentizer, _React$Component);\n\t\n\t    function HtmlComponentizer(props) {\n\t        _classCallCheck(this, HtmlComponentizer);\n\t\n\t        _get(Object.getPrototypeOf(HtmlComponentizer.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.handleRenderChild = this.renderChild.bind(this);\n\t\n\t        this.state = { htmlChildren: null };\n\t        this.TagName = this.props.tag || 'span';\n\t    }\n\t\n\t    /**\r\n\t     * Component methods\r\n\t     */\n\t\n\t    _createClass(HtmlComponentizer, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            this.process(this.props.content);\n\t        }\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate(prevProps, prevState) {\n\t            if (prevProps.content !== this.props.content) {\n\t                this.process(this.props.content);\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Misc. methods\r\n\t         */\n\t    }, {\n\t        key: 'generateMatches',\n\t        value: function generateMatches(content) {\n\t            var MatchComponent = this.props.component;\n\t            var htmlChildren = [];\n\t\n\t            if (typeof MatchComponent === 'function' && typeof content === 'string' && content.length && this.props.match instanceof RegExp) {\n\t                var contentList = content.split('');\n\t                var matches = content.match(this.props.match);\n\t\n\t                if (matches) {\n\t                    for (var i = 0; i < matches.length; i++) {\n\t                        var match = matches[i];\n\t                        var currentContent = contentList.join('');\n\t\n\t                        var textContent = contentList.splice(0, currentContent.indexOf(match)).join('');\n\t\n\t                        htmlChildren.push({\n\t                            props: { dangerouslySetInnerHTML: { __html: textContent } },\n\t                            tag: 'span'\n\t                        });\n\t\n\t                        htmlChildren.push({\n\t                            props: { matchIndex: i, value: match },\n\t                            spread: ['componentProps'],\n\t                            tag: MatchComponent\n\t                        });\n\t\n\t                        contentList.splice(0, match.length);\n\t                    }\n\t\n\t                    if (contentList.length) {\n\t                        var textContent = contentList.join('');\n\t\n\t                        htmlChildren.push({\n\t                            props: { dangerouslySetInnerHTML: { __html: textContent } },\n\t                            tag: 'span'\n\t                        });\n\t                    }\n\t                } else {\n\t                    htmlChildren.push({\n\t                        props: { dangerouslySetInnerHTML: { __html: content } },\n\t                        tag: 'span'\n\t                    });\n\t                }\n\t            }\n\t\n\t            return htmlChildren;\n\t        }\n\t    }, {\n\t        key: 'process',\n\t        value: function process(content) {\n\t            var _this = this;\n\t\n\t            if (typeof content === 'string' && content.length) {\n\t                (function () {\n\t                    var htmlChildren = [];\n\t\n\t                    if (/<(.*?)([^/])>/.test(content)) {\n\t                        (function () {\n\t                            var contentList = content.split('');\n\t                            var isTag = false;\n\t                            var fillerContent = '';\n\t\n\t                            // Get the tag name of the current tag and remove\n\t                            // excess characters.\n\t                            var getTagName = function getTagName() {\n\t                                var tagName = '';\n\t\n\t                                while (contentList[0] !== ' ' && contentList[0] !== '>' && contentList[0] !== '/' && contentList.length) {\n\t                                    tagName += contentList.shift();\n\t                                }\n\t\n\t                                removeClosing();\n\t\n\t                                return tagName;\n\t                            };\n\t                            var removeClosing = function removeClosing() {\n\t                                while (contentList[0] !== '>' && contentList.length) {\n\t                                    contentList.shift();\n\t                                }\n\t\n\t                                if (contentList[0] === '>') {\n\t                                    contentList.shift();\n\t                                }\n\t                            };\n\t\n\t                            // Add the current filler content to the child list.\n\t                            var addFillerContent = function addFillerContent() {\n\t                                if (fillerContent.length) {\n\t                                    htmlChildren.push({\n\t                                        props: { content: fillerContent, tag: 'span' },\n\t                                        spread: [''],\n\t                                        tag: HtmlComponentizer\n\t                                    });\n\t\n\t                                    fillerContent = '';\n\t                                }\n\t                            };\n\t\n\t                            var isCurrentText = function isCurrentText(value) {\n\t                                return contentList.slice(0, value.length).join('') === value;\n\t                            };\n\t\n\t                            // Check to see if the current tag is a valid tag.\n\t                            var isValidTag = function isValidTag() {\n\t                                var ignoredTags = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'video', 'vr', 'wbr'];\n\t\n\t                                if (ignoredTags.find(function (tag) {\n\t                                    return isCurrentText('<' + tag);\n\t                                })) {\n\t                                    return false;\n\t                                }\n\t\n\t                                return true;\n\t                            };\n\t\n\t                            while (contentList.length) {\n\t                                if (contentList[0] === '<' && isValidTag()) {\n\t                                    contentList.shift();\n\t\n\t                                    addFillerContent();\n\t\n\t                                    var tagName = getTagName();\n\t                                    var tagContent = '';\n\t                                    var tagCount = 1;\n\t                                    var isTagOpen = true;\n\t\n\t                                    while (isTagOpen && contentList.length) {\n\t                                        if (contentList[0] === '<' && isValidTag()) {\n\t                                            contentList.shift();\n\t\n\t                                            var isSubtagClosing = contentList[0] === '/';\n\t\n\t                                            if (isSubtagClosing) {\n\t                                                contentList.shift();\n\t                                            }\n\t\n\t                                            var subtagName = getTagName();\n\t\n\t                                            if (subtagName === tagName) {\n\t                                                if (isSubtagClosing) {\n\t                                                    tagCount--;\n\t\n\t                                                    if (tagCount <= 0) {\n\t                                                        isTagOpen = false;\n\t                                                    }\n\t                                                } else {\n\t                                                    tagCount++;\n\t                                                }\n\t                                            }\n\t\n\t                                            if (isTagOpen) {\n\t                                                tagContent += '<' + (isSubtagClosing ? '/' : '') + subtagName + '>';\n\t                                            }\n\t                                        } else {\n\t                                            tagContent += contentList.shift();\n\t                                        }\n\t                                    }\n\t\n\t                                    htmlChildren.push({\n\t                                        props: { content: tagContent, tag: tagName },\n\t                                        spread: [''],\n\t                                        tag: HtmlComponentizer\n\t                                    });\n\t                                } else {\n\t                                    fillerContent += contentList.shift();\n\t                                }\n\t                            }\n\t\n\t                            addFillerContent();\n\t                        })();\n\t                    } else {\n\t                        htmlChildren = _this.generateMatches(content);\n\t                    }\n\t\n\t                    _this.setState({ htmlChildren: htmlChildren });\n\t                })();\n\t            }\n\t        }\n\t\n\t        /**\r\n\t         * Render methods\r\n\t         */\n\t    }, {\n\t        key: 'renderChild',\n\t        value: function renderChild(child, index) {\n\t            var Tag = child.tag;\n\t            var childProps = {};\n\t\n\t            if (child.spread && child.spread.length) {\n\t                for (var i = 0; i < child.spread.length; i++) {\n\t                    var spread = child.spread[i];\n\t\n\t                    if (spread === '') {\n\t                        childProps = Object.assign(childProps, this.props);\n\t                    } else if (this.props[spread] && typeof this.props[spread] === 'object') {\n\t                        childProps = Object.assign(childProps, this.props[spread]);\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (child.props) {\n\t                childProps = Object.assign(childProps, child.props);\n\t            }\n\t\n\t            return React.createElement(Tag, childProps);\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement(\n\t                this.TagName,\n\t                null,\n\t                this.state.htmlChildren ? this.state.htmlChildren.map(this.handleRenderChild) : null\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return HtmlComponentizer;\n\t})(React.Component);\n\t\n\texports['default'] = HtmlComponentizer;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// html-componentizer.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 515384df5efc1fe46c39","import HtmlComponentizer from './components/HtmlComponentizer';\r\n\r\n// Attach the components to the window.\r\nwindow.HtmlComponentizer = HtmlComponentizer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// TODO: Fix issue where this doesn't work when HTML tags have attributes.\r\nclass HtmlComponentizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleRenderChild = this.renderChild.bind(this);\r\n\r\n        this.state = { htmlChildren: null };\r\n        this.TagName = (this.props.tag || 'span');\r\n    }\r\n    /**\r\n     * Component methods\r\n     */\r\n    componentDidMount() {\r\n        this.process(this.props.content);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.content !== this.props.content) {\r\n            this.process(this.props.content);\r\n        }\r\n    }\r\n    /**\r\n     * Misc. methods\r\n     */\r\n    generateMatches(content) {\r\n        const MatchComponent = this.props.component;\r\n        let htmlChildren = [];\r\n\r\n        if (typeof MatchComponent === 'function' && typeof content === 'string' && content.length && this.props.match instanceof RegExp) {\r\n            const contentList = content.split('');\r\n            const matches = content.match(this.props.match);\r\n\r\n            if (matches) {\r\n                for (let i = 0; i < matches.length; i++) {\r\n                    const match = matches[i];\r\n                    const currentContent = contentList.join('');\r\n\r\n                    const textContent = contentList.splice(0, currentContent.indexOf(match)).join('');\r\n\r\n                    htmlChildren.push({\r\n                        props: { dangerouslySetInnerHTML: { __html: textContent } },\r\n                        tag: 'span'\r\n                    });\r\n\r\n                    htmlChildren.push({\r\n                        props: { matchIndex: i, value: match },\r\n                        spread: ['componentProps'],\r\n                        tag: MatchComponent\r\n                    });\r\n\r\n                    contentList.splice(0, match.length);\r\n                }\r\n\r\n                if (contentList.length) {\r\n                    const textContent = contentList.join('');\r\n\r\n                    htmlChildren.push({\r\n                        props: { dangerouslySetInnerHTML: { __html: textContent } },\r\n                        tag: 'span'\r\n                    });\r\n                }\r\n            } else {\r\n                htmlChildren.push({\r\n                    props: { dangerouslySetInnerHTML: { __html: content } },\r\n                    tag: 'span'\r\n                });\r\n            }\r\n        }\r\n\r\n        return htmlChildren;\r\n    }\r\n    process(content) {\r\n        if (typeof content === 'string' && content.length) {\r\n            let htmlChildren = [];\r\n\r\n            if (/<(.*?)([^/])>/.test(content)) {\r\n                let contentList = content.split('');\r\n                let isTag = false;\r\n                let fillerContent = '';\r\n\r\n                 // Get the tag name of the current tag and remove\r\n                 // excess characters.\r\n                const getTagName = () => {\r\n                    let tagName = '';\r\n\r\n                    while (contentList[0] !== ' ' && contentList[0] !== '>' && contentList[0] !== '/' && contentList.length) {\r\n                        tagName += contentList.shift();\r\n                    }\r\n\r\n                    removeClosing();\r\n\r\n                    return tagName;\r\n                };\r\n                const removeClosing = () => {\r\n                    while (contentList[0] !== '>' && contentList.length) {\r\n                        contentList.shift();\r\n                    }\r\n\r\n                    if (contentList[0] === '>') {\r\n                        contentList.shift();\r\n                    }\r\n                };\r\n\r\n                 // Add the current filler content to the child list.\r\n                const addFillerContent = () => {\r\n                    if (fillerContent.length) {\r\n                        htmlChildren.push({\r\n                            props: { content: fillerContent, tag: 'span' },\r\n                            spread: [''],\r\n                            tag: HtmlComponentizer\r\n                        });\r\n\r\n                        fillerContent = '';\r\n                    }\r\n                };\r\n\r\n                const isCurrentText = (value) => {\r\n                    return (contentList.slice(0, value.length).join('') === value);\r\n                };\r\n\r\n                 // Check to see if the current tag is a valid tag.\r\n                const isValidTag = () => {\r\n                    const ignoredTags = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'video', 'vr', 'wbr'];\r\n\r\n                    if (ignoredTags.find(tag => isCurrentText(`<${tag}`))) {\r\n                        return false;\r\n                    }\r\n\r\n                    return true;\r\n                };\r\n\r\n                while (contentList.length) {\r\n                    if (contentList[0] === '<' && isValidTag()) {\r\n                        contentList.shift();\r\n\r\n                        addFillerContent();\r\n\r\n                        let tagName = getTagName();\r\n                        let tagContent = '';\r\n                        let tagCount = 1;\r\n                        let isTagOpen = true;\r\n\r\n                        while (isTagOpen && contentList.length) {\r\n                            if (contentList[0] === '<' && isValidTag()) {\r\n                                contentList.shift();\r\n\r\n                                const isSubtagClosing = (contentList[0] === '/');\r\n\r\n                                if (isSubtagClosing) {\r\n                                    contentList.shift();\r\n                                }\r\n\r\n                                let subtagName = getTagName();\r\n\r\n                                if (subtagName === tagName) {\r\n                                    if (isSubtagClosing) {\r\n                                        tagCount--;\r\n\r\n                                        if (tagCount <= 0) {\r\n                                            isTagOpen = false;\r\n                                        }\r\n                                    } else {\r\n                                        tagCount++;\r\n                                    }\r\n                                }\r\n\r\n                                if (isTagOpen) {\r\n                                    tagContent += `<${isSubtagClosing ? '/' : ''}${subtagName}>`;\r\n                                }\r\n                            } else {\r\n                                tagContent += contentList.shift();\r\n                            }\r\n                        }\r\n\r\n                        htmlChildren.push({\r\n                            props: { content: tagContent, tag: tagName },\r\n                            spread: [''],\r\n                            tag: HtmlComponentizer\r\n                        });\r\n                    } else {\r\n                        fillerContent += contentList.shift();\r\n                    }\r\n                }\r\n\r\n                addFillerContent();\r\n            } else {\r\n                htmlChildren = this.generateMatches(content);\r\n            }\r\n\r\n            this.setState({ htmlChildren });\r\n        }\r\n    }\r\n    /**\r\n     * Render methods\r\n     */\r\n    renderChild(child, index) {\r\n        const Tag = child.tag;\r\n        let childProps = {};\r\n\r\n        if (child.spread && child.spread.length) {\r\n            for (let i = 0; i < child.spread.length; i++) {\r\n                const spread = child.spread[i];\r\n\r\n                if (spread === '') {\r\n                    childProps = Object.assign(childProps, this.props);\r\n                } else if (this.props[spread] && typeof this.props[spread] === 'object') {\r\n                    childProps = Object.assign(childProps, this.props[spread]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (child.props) {\r\n            childProps = Object.assign(childProps, child.props);\r\n        }\r\n\r\n        return <Tag {...childProps} />;\r\n    }\r\n    render() {\r\n        return (\r\n            <this.TagName>\r\n                {this.state.htmlChildren ? this.state.htmlChildren.map(this.handleRenderChild) : null}\r\n            </this.TagName>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HtmlComponentizer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/HtmlComponentizer.js"],"sourceRoot":""}